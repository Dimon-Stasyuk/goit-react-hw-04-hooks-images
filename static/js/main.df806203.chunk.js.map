{"version":3,"sources":["components/Button/Button.js","components/Loader/Loader.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Modal/Modal.js","components/ImageGallery/ImageGallery.js","api/apiServise.js","components/Searchbar/Searchbar.js","App.js","index.js"],"names":["Button","OnBtn","type","className","onClick","Spinner","color","height","width","ImageGalleryItem","onModalOpen","ongetImg","images","map","webformatURL","largeImageURL","id","src","alt","Modal","onClose","img","OnModalClose","handleKeyDown","event","code","useEffect","window","addEventListener","removeEventListener","ImageGallery","searchName","useState","image","setImage","page","setPage","modal","setModal","largeImg","setLargeImg","loading","setLoading","btn","setBtn","onFetch","setTimeout","imgName","pageNum","fetch","then","res","ok","json","Promise","reject","Error","prev","hits","modalTogle","scrollTo","top","document","documentElement","scrollHeight","behavior","target","currentTarget","Searchbar","getName","name","setName","onSubmit","preventDefault","trim","toast","error","value","onChange","autoComplete","autoFocus","placeholder","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.df806203.chunk.js","sourcesContent":["import \"./Button.css\";\nimport PropTypes from \"prop-types\";\n\nconst Button = ({ OnBtn }) => {\n  return (\n    <button type='button' className='Button' onClick={OnBtn}>\n      Load More\n    </button>\n  );\n};\n\nexport default Button;\n\nButton.propTypes = {\n  OnBtn: PropTypes.func.isRequired,\n};\n","import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport \"./Loader.css\";\nimport Loader from \"react-loader-spinner\";\n\nconst Spinner = () => {\n  return (\n    <div className='loader-container'>\n      <Loader type='ThreeDots' color='#3f51b5' height={60} width={60} />\n    </div>\n  );\n};\n\nexport default Spinner;\n","import PropTypes from \"prop-types\";\n\nimport \"./ImageGalleryItem.css\";\n\nexport default function ImageGalleryItem({ onModalOpen, ongetImg, images }) {\n  return (\n    <>\n      {images.map(({ webformatURL, largeImageURL, id }) => {\n        return (\n          <li\n            className='ImageGalleryItem'\n            key={id}\n            onClick={() => {\n              onModalOpen();\n              ongetImg(largeImageURL);\n            }}>\n            <img src={webformatURL} alt='' className='ImageGalleryItem-image' />\n          </li>\n        );\n      })}\n    </>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      webformatURL: PropTypes.string,\n      largeImageURL: PropTypes.string,\n    }),\n  ),\n};\n","import PropTypes from \"prop-types\";\nimport { useEffect } from \"react\";\nimport \"./Modal.css\";\n\nexport default function Modal({ onClose, img, OnModalClose }) {\n  const handleKeyDown = (event) => {\n    if (event.code === \"Escape\") {\n      OnModalClose();\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  });\n\n  return (\n    <div className='Overlay' onClick={onClose}>\n      <div className='Modal'>\n        <img src={img} alt='' />\n      </div>\n    </div>\n  );\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  img: PropTypes.string.isRequired,\n  OnModalClose: PropTypes.func.isRequired,\n};\n","import PropTypes from \"prop-types\";\nimport { useState, useEffect } from \"react\";\nimport Button from \"../Button/Button\";\nimport Spinner from \"../Loader/Loader\";\nimport \"./ImageGallery.css\";\nimport apiServise from \"../../api/apiServise\";\n\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\nimport Modal from \"../Modal/Modal\";\n\nexport default function ImageGallery({ searchName }) {\n  const [image, setImage] = useState([]);\n  const [page, setPage] = useState(1);\n  const [modal, setModal] = useState(false);\n  const [largeImg, setLargeImg] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [btn, setBtn] = useState(false);\n\n  const onFetch = () => {\n    setLoading(true);\n    setBtn(false);\n\n    setTimeout(() => {\n      apiServise(searchName, page).then((res) => {\n        setImage((prev) => [...prev, ...res.hits]);\n        setBtn(true);\n        setLoading(false);\n        setPage((prev) => prev + 1);\n      });\n    }, 300);\n  };\n\n  const modalTogle = () => {\n    setModal((prev) => !prev);\n  };\n\n  const ovarlayClose = (event) => {\n    if (event.target === event.currentTarget) {\n      modalTogle();\n    }\n  };\n\n  const scrollPage = () => {\n    setTimeout(() => {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: \"smooth\",\n      });\n    }, 600);\n  };\n\n  const onBtnClick = () => {\n    onFetch();\n\n    scrollPage();\n  };\n\n  useEffect(() => {\n    if (!searchName) {\n      return;\n    }\n    setPage(1);\n    setImage([]);\n    onFetch();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchName]);\n\n  return (\n    <>\n      <ul className='ImageGallery'>\n        {image && (\n          <ImageGalleryItem\n            images={image}\n            onModalOpen={modalTogle}\n            ongetImg={setLargeImg}\n          />\n        )}\n      </ul>\n      {btn && <Button OnBtn={onBtnClick} />}\n      {loading && <Spinner />}\n      {modal && (\n        <Modal\n          onClose={ovarlayClose}\n          OnModalClose={modalTogle}\n          img={largeImg}\n        />\n      )}\n    </>\n  );\n}\n\nImageGallery.propTypes = {\n  searchName: PropTypes.string.isRequired,\n};\n","const KEY = \"23097756-2661a8d66efd3b5956221c710\";\r\nconst URL = \"https://pixabay.com/api/\";\r\nconst pagePerPage = 12;\r\n\r\nexport default function apiServise(imgName, pageNum) {\r\n  return fetch(\r\n    `${URL}?q=${imgName}&page=${pageNum}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=${pagePerPage}`,\r\n  ).then((res) => {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n\r\n    return Promise.reject(new Error(`Картинки с именем ${imgName} отсутсвуют`));\r\n  });\r\n}\r\n","import { toast } from \"react-toastify\";\nimport { useState } from \"react\";\nimport \"./Searchbar.css\";\n\nexport default function Searchbar({ getName }) {\n  const [name, setName] = useState(\"\");\n\n  const reset = () => {\n    setName(\"\");\n  };\n\n  const handleNameChange = (event) => {\n    setName(event.target.value);\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    if (name.trim() === \"\") {\n      toast.error(\"Enter the name of the picture\");\n      return;\n    }\n    reset();\n    getName(name);\n  };\n\n  return (\n    <header className='Searchbar'>\n      <form className='SearchForm' onSubmit={onSubmit}>\n        <button type='submit' className='SearchForm-button'>\n          <span className='SearchForm-button-label'>Search</span>\n        </button>\n\n        <input\n          value={name}\n          onChange={handleNameChange}\n          className='SearchForm-input'\n          type='text'\n          autoComplete='off'\n          autoFocus\n          placeholder='Search images and photos'\n        />\n      </form>\n    </header>\n  );\n}\n","import { ToastContainer } from \"react-toastify\";\nimport { useState } from \"react\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport PropTypes from \"prop-types\";\n\nimport ImageGallery from \"./components/ImageGallery/ImageGallery\";\nimport Searchbar from \"./components/Searchbar/Searchbar\";\nimport \"./styles.css\";\n\nexport default function App() {\n  const [name, setName] = useState(\"\");\n\n  return (\n    <>\n      <Searchbar getName={setName} />\n      <ImageGallery searchName={name} />\n      <ToastContainer />\n    </>\n  );\n}\n\nApp.propTypes = {\n  name: PropTypes.string,\n};\n","import React from \"react\";\n\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}