{"version":3,"sources":["components/Button/Button.js","components/Loader/Loader.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Modal/Modal.js","components/ImageGallery/ImageGallery.js","components/Searchbar/Searchbar.js","App.js","index.js"],"names":["Button","OnBtn","type","className","onClick","Spinner","color","height","width","ImageGalleryItem","onModalOpen","ongetImg","images","map","webformatURL","largeImageURL","src","alt","shortid","generate","Modal","onClose","img","OnModalClose","handleKeyDown","event","code","useEffect","window","addEventListener","removeEventListener","ImageGallery","searchName","useState","page","setPage","image","setImage","modal","setModal","largeImg","setLargeImg","loading","setLoading","btn","setBtn","onFatch","setTimeout","fetch","then","response","json","prev","console","log","hits","modalTogle","scrollTo","top","document","documentElement","scrollHeight","behavior","target","currentTarget","Searchbar","getName","name","setName","onSubmit","preventDefault","trim","toast","error","value","onChange","autoComplete","autoFocus","placeholder","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ee5d0e7f.chunk.js","sourcesContent":["import \"./Button.css\";\nimport PropTypes from \"prop-types\";\n\nconst Button = ({ OnBtn }) => {\n  return (\n    <button type='button' className='Button' onClick={OnBtn}>\n      Load More\n    </button>\n  );\n};\n\nexport default Button;\n\nButton.propTypes = {\n  OnBtn: PropTypes.func.isRequired,\n};\n","import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport \"./Loader.css\";\nimport Loader from \"react-loader-spinner\";\n\nconst Spinner = () => {\n  return (\n    <div className='loader-container'>\n      <Loader type='ThreeDots' color='#3f51b5' height={60} width={60} />\n    </div>\n  );\n};\n\nexport default Spinner;\n","import PropTypes from \"prop-types\";\nimport shortid from \"shortid\";\nimport \"./ImageGalleryItem.css\";\n\nexport default function ImageGalleryItem({ onModalOpen, ongetImg, images }) {\n  return (\n    <>\n      {images.map(({ webformatURL, largeImageURL }) => {\n        return (\n          <li\n            className='ImageGalleryItem'\n            key={shortid.generate()}\n            onClick={() => {\n              onModalOpen();\n              ongetImg(largeImageURL);\n            }}>\n            <img src={webformatURL} alt='' className='ImageGalleryItem-image' />\n          </li>\n        );\n      })}\n    </>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      webformatURL: PropTypes.string,\n      largeImageURL: PropTypes.string,\n    }),\n  ),\n};\n","import PropTypes from \"prop-types\";\nimport { useEffect } from \"react\";\nimport \"./Modal.css\";\n\nexport default function Modal({ onClose, img, OnModalClose }) {\n  const handleKeyDown = (event) => {\n    if (event.code === \"Escape\") {\n      OnModalClose();\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  });\n\n  return (\n    <div className='Overlay' onClick={onClose}>\n      <div className='Modal'>\n        <img src={img} alt='' />\n      </div>\n    </div>\n  );\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  img: PropTypes.string.isRequired,\n  OnModalClose: PropTypes.func.isRequired,\n};\n","import PropTypes from \"prop-types\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Button from \"../Button/Button\";\r\nimport Spinner from \"../Loader/Loader\";\r\nimport \"./ImageGallery.css\";\r\n// import apiServise from \"../../api/apiServise\";\r\n\r\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\r\nimport Modal from \"../Modal/Modal\";\r\n\r\nexport default function ImageGallery({ searchName }) {\r\n  const [page, setPage] = useState(null);\r\n  const [image, setImage] = useState(null);\r\n  const [modal, setModal] = useState(false);\r\n  const [largeImg, setLargeImg] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [btn, setBtn] = useState(false);\r\n\r\n  const onFatch = () => {\r\n    const key = \"23097756-2661a8d66efd3b5956221c710\";\r\n    setLoading(true);\r\n    setBtn(false);\r\n    setTimeout(() => {\r\n      fetch(\r\n        `https://pixabay.com/api/?q=${searchName}&page=${page}&key=${key}&image_type=photo&orientation=horizontal&per_page=12`,\r\n      )\r\n        .then((response) => response.json())\r\n        .then((response) =>\r\n          setImage((prev) => {\r\n            console.log(\"fetch\");\r\n            return [...prev, ...response.hits];\r\n          }),\r\n        );\r\n\r\n      setBtn(true);\r\n      setLoading(false);\r\n    }, 500);\r\n  };\r\n\r\n  const pageIncrement = () => {\r\n    setPage((prev) => prev + 1);\r\n    console.log(\"Increment\");\r\n  };\r\n\r\n  const modalTogle = () => {\r\n    setModal((prev) => !prev);\r\n  };\r\n\r\n  const ovarlayClose = (event) => {\r\n    if (event.target === event.currentTarget) {\r\n      modalTogle();\r\n    }\r\n  };\r\n\r\n  const scrollPage = () => {\r\n    setTimeout(() => {\r\n      window.scrollTo({\r\n        top: document.documentElement.scrollHeight,\r\n        behavior: \"smooth\",\r\n      });\r\n    }, 1000);\r\n  };\r\n\r\n  const onBtnClick = () => {\r\n    pageIncrement();\r\n    scrollPage();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!searchName) {\r\n      return;\r\n    }\r\n\r\n    if (page === 1) {\r\n      onFatch();\r\n    }\r\n\r\n    setPage(1);\r\n    setImage([]);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [searchName]);\r\n\r\n  useEffect(() => {\r\n    if (!page) {\r\n      return;\r\n    }\r\n    onFatch();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [page]);\r\n\r\n  return (\r\n    <>\r\n      <ul className='ImageGallery'>\r\n        {image && (\r\n          <ImageGalleryItem\r\n            images={image}\r\n            onModalOpen={modalTogle}\r\n            ongetImg={setLargeImg}\r\n          />\r\n        )}\r\n      </ul>\r\n      {btn && <Button OnBtn={onBtnClick} />}\r\n      {loading && <Spinner />}\r\n      {modal && (\r\n        <Modal\r\n          onClose={ovarlayClose}\r\n          OnModalClose={modalTogle}\r\n          img={largeImg}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  searchName: PropTypes.string.isRequired,\r\n};\r\n","import { toast } from \"react-toastify\";\nimport { useState } from \"react\";\nimport \"./Searchbar.css\";\n\nexport default function Searchbar({ getName }) {\n  const [name, setName] = useState(\"\");\n\n  const reset = () => {\n    setName(\"\");\n  };\n\n  const handleNameChange = (event) => {\n    setName(event.target.value);\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    if (name.trim() === \"\") {\n      toast.error(\"Enter the name of the picture\");\n      return;\n    }\n    reset();\n    getName(name);\n  };\n\n  return (\n    <header className='Searchbar'>\n      <form className='SearchForm' onSubmit={onSubmit}>\n        <button type='submit' className='SearchForm-button'>\n          <span className='SearchForm-button-label'>Search</span>\n        </button>\n\n        <input\n          value={name}\n          onChange={handleNameChange}\n          className='SearchForm-input'\n          type='text'\n          autoComplete='off'\n          autoFocus\n          placeholder='Search images and photos'\n        />\n      </form>\n    </header>\n  );\n}\n","import { ToastContainer } from \"react-toastify\";\nimport { useState } from \"react\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport PropTypes from \"prop-types\";\n\nimport ImageGallery from \"./components/ImageGallery/ImageGallery\";\nimport Searchbar from \"./components/Searchbar/Searchbar\";\nimport \"./styles.css\";\n\nexport default function App() {\n  const [name, setName] = useState(\"\");\n\n  return (\n    <>\n      <Searchbar getName={setName} />\n      <ImageGallery searchName={name} />\n\n      <ToastContainer />\n    </>\n  );\n}\n\nApp.propTypes = {\n  name: PropTypes.string,\n};\n","import React from \"react\";\n\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}